<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[markdown的基本语法]]></title>
    <url>%2F2018%2F11%2F04%2Fmarkdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[markdown 是一种纯文本格式的标记语言，其标记语法非常的简单。利用markdown，可以使简单的文本具有一定的格式。其基本的使用方法如下所示： 1.利用#号来增加标题。标准语法中，#后面需要增加空格。 123# 一级标题## 二级标题### 三级标题 上述代码段的测试结果如下： 一级标题二级标题三级标题2.斜体，斜体的文字部分左右各用一个*号包起来。代码如下（后续其他操作请参照该代码执行）。1*要斜体的文字* 上述代码段的测试结果如下： 要斜体的文字3.加粗，加粗的文字部分左右各用两个**号包起来，结果如下： 要加粗的文字 4.斜体加粗，使用三个*号包起来，结果如下： 要斜体加粗的文字 5.删除线，使用两个~包起来，结果如下 要删除的文字 6.引用，在被引用文字的前面加&gt;号即可，这里的引用允许嵌套使用。嵌套的层数等于&gt;号的个数，测试如下： 一层引用 二层引用 三层引用 7.分割线，使用三个及以上-或者星号都可以，其效果相同 8.增加图片，其基本的语法如下所示： 1![图片alt](图片地址 ''图片title'') 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 9.超链接，与增加图片的方式类似，代码段如下所示： 1[超链接名](超链接地址 "超链接title") 10.表格，其基本的代码段如下所示： 1234表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容 上述代码段的第二行用于进行表头和内容的分割，其中的冒号决定了内部的对齐方式，默认文字为靠左对齐。双冒号则为居中，右侧冒号为靠右对齐，测试结果如下： 表头 表头 表头 内容 内容 内容 内容 内容 内容 11.代码段，单行代码用一对反引号括住，多行代码用三对反引号括住。上面的例子中已经显示出了代码段的表达效果。 后续内容持续补充。]]></content>
      <categories>
        <category>其他操作</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo多端发布相关操作]]></title>
    <url>%2F2018%2F11%2F04%2Fhexo-oper%2F</url>
    <content type="text"><![CDATA[在不同的端口进行相关操作时，需要按照下述方法进行： 123456git pull origin hexo //先pull完成本地与远端的融合hexo new post "new post name" //新建一个文件git add source //将新建文件进行添加git commit -m "将添加说明写在这里"git push origin hexo //将本地修改push到远程仓库hexo d -g //生成并发表]]></content>
      <categories>
        <category>其他操作</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++语法学习开始]]></title>
    <url>%2F2018%2F11%2F02%2FC%2B%2B%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E5%BC%80%E5%A7%8B%2F</url>
    <content type="text"><![CDATA[这里是我的第一个基础C++语法段落。以“hello world”作为开始123456789#include&lt;iostream&gt;using namespace std;int main()&#123; char a[]="hello world"; cout&lt;&lt;a; return 0;&#125; 运行上述程序，即可在屏幕上输出“hello world”语句。]]></content>
      <categories>
        <category>C++基础语法部分</category>
      </categories>
  </entry>
</search>
